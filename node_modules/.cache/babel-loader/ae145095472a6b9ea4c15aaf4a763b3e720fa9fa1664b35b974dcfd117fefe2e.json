{"ast":null,"code":"var _jsxFileName = \"/Users/ang3l/Documents/Software Engineering/cs373-idb/src/pages/league.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TableComponent from '../compenents/StandingsTable.js';\nimport '../styles/leagues.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leagues() {\n  _s();\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    // Fetch data from local JSON file\n    fetch('/Users/ang3l/Documents/Software Engineering/cs373-idb/backend/leagues.json').then(response => {\n      console.log('Response object:', response); // Log the response object\n      return response.json(); // Parse JSON data from response\n    }).then(data => {\n      console.log('Fetched JSON data:', data); // Log the parsed JSON data\n\n      // Extracting teams data from \"Premier League\" section\n      const premierLeagueData = data['Premier League'].standings;\n\n      // Transform the object into an array of teams\n      const teamsArray = Object.keys(premierLeagueData).map(key => ({\n        id: premierLeagueData[key].id,\n        position: premierLeagueData[key].position,\n        name: key,\n        crestUrl: premierLeagueData[key].team_crest,\n        points: premierLeagueData[key].points,\n        gamesWon: premierLeagueData[key].games_won,\n        gamesLost: premierLeagueData[key].games_lost,\n        goalsFor: premierLeagueData[key].goals_for,\n        goalsAgainst: premierLeagueData[key].goals_against,\n        goalDifference: premierLeagueData[key].goal_difference\n      }));\n      setTeams(teamsArray);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"League Standings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableComponent, {\n      data: teams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Copyright \\xA9 2024. Hatttrick. All Rights Reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Leagues, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = Leagues;\nexport default Leagues;\nvar _c;\n$RefreshReg$(_c, \"Leagues\");","map":{"version":3,"names":["React","useState","useEffect","TableComponent","jsxDEV","_jsxDEV","Leagues","_s","teams","setTeams","fetch","then","response","console","log","json","data","premierLeagueData","standings","teamsArray","Object","keys","map","key","id","position","name","crestUrl","team_crest","points","gamesWon","games_won","gamesLost","games_lost","goalsFor","goals_for","goalsAgainst","goals_against","goalDifference","goal_difference","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ang3l/Documents/Software Engineering/cs373-idb/src/pages/league.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TableComponent from '../compenents/StandingsTable.js';\nimport '../styles/leagues.css';\n\nfunction Leagues() {\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from local JSON file\n    fetch('/Users/ang3l/Documents/Software Engineering/cs373-idb/backend/leagues.json')\n      .then(response => {\n        console.log('Response object:', response); // Log the response object\n        return response.json(); // Parse JSON data from response\n      })\n      .then(data => {\n        console.log('Fetched JSON data:', data); // Log the parsed JSON data\n\n        // Extracting teams data from \"Premier League\" section\n        const premierLeagueData = data['Premier League'].standings;\n\n        // Transform the object into an array of teams\n        const teamsArray = Object.keys(premierLeagueData).map(key => ({\n          id: premierLeagueData[key].id,\n          position: premierLeagueData[key].position,\n          name: key,\n          crestUrl: premierLeagueData[key].team_crest,\n          points: premierLeagueData[key].points,\n          gamesWon: premierLeagueData[key].games_won,\n          gamesLost: premierLeagueData[key].games_lost,\n          goalsFor: premierLeagueData[key].goals_for,\n          goalsAgainst: premierLeagueData[key].goals_against,\n          goalDifference: premierLeagueData[key].goal_difference,\n        }));\n\n        setTeams(teamsArray);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>League Standings</h1>\n      <TableComponent data={teams} />\n      <footer>\n        <small>Copyright Â© 2024. Hatttrick. All Rights Reserved.</small>\n      </footer>\n    </div>\n  );\n}\n\nexport default Leagues;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,4EAA4E,CAAC,CAChFC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC,CAAC,CAAC;MAC3C,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEE,IAAI,CAAC,CAAC,CAAC;;MAEzC;MACA,MAAMC,iBAAiB,GAAGD,IAAI,CAAC,gBAAgB,CAAC,CAACE,SAAS;;MAE1D;MACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACJ,iBAAiB,CAAC,CAACK,GAAG,CAACC,GAAG,KAAK;QAC5DC,EAAE,EAAEP,iBAAiB,CAACM,GAAG,CAAC,CAACC,EAAE;QAC7BC,QAAQ,EAAER,iBAAiB,CAACM,GAAG,CAAC,CAACE,QAAQ;QACzCC,IAAI,EAAEH,GAAG;QACTI,QAAQ,EAAEV,iBAAiB,CAACM,GAAG,CAAC,CAACK,UAAU;QAC3CC,MAAM,EAAEZ,iBAAiB,CAACM,GAAG,CAAC,CAACM,MAAM;QACrCC,QAAQ,EAAEb,iBAAiB,CAACM,GAAG,CAAC,CAACQ,SAAS;QAC1CC,SAAS,EAAEf,iBAAiB,CAACM,GAAG,CAAC,CAACU,UAAU;QAC5CC,QAAQ,EAAEjB,iBAAiB,CAACM,GAAG,CAAC,CAACY,SAAS;QAC1CC,YAAY,EAAEnB,iBAAiB,CAACM,GAAG,CAAC,CAACc,aAAa;QAClDC,cAAc,EAAErB,iBAAiB,CAACM,GAAG,CAAC,CAACgB;MACzC,CAAC,CAAC,CAAC;MAEH9B,QAAQ,CAACU,UAAU,CAAC;IACtB,CAAC,CAAC,CACDqB,KAAK,CAACC,KAAK,IAAI;MACd5B,OAAO,CAAC4B,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpC,OAAA;IAAKqC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBtC,OAAA;MAAAsC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzB1C,OAAA,CAACF,cAAc;MAACa,IAAI,EAAER;IAAM;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/B1C,OAAA;MAAAsC,QAAA,eACEtC,OAAA;QAAAsC,QAAA,EAAO;MAAiD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxC,EAAA,CA9CQD,OAAO;AAAA0C,EAAA,GAAP1C,OAAO;AAgDhB,eAAeA,OAAO;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}