{"ast":null,"code":"// HTML structure generated dynamically\ndocument.write(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Premier League Standings</title>\n        <style>\n            table {\n                width: 100%;\n                border-collapse: collapse;\n            }\n            th, td {\n                border: 1px solid #ddd;\n                padding: 8px;\n                text-align: center;\n            }\n            th {\n                background-color: #f2f2f2;\n            }\n            img {\n                width: 50px;\n                height: auto;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Premier League Standings</h1>\n        <table id=\"standingsTable\">\n            <thead>\n                <tr>\n                    <th>Position</th>\n                    <th>Team</th>\n                    <th>Crest</th>\n                    <th>Points</th>\n                    <th>Games Won</th>\n                    <th>Games Lost</th>\n                    <th>Goals For</th>\n                    <th>Goals Against</th>\n                    <th>Goal Difference</th>\n                </tr>\n            </thead>\n            <tbody id=\"tableBody\">\n                <!-- Data will be inserted here -->\n            </tbody>\n        </table>\n\n        <script>\n            fetch('leagues.json')\n                .then(response => response.json())\n                .then(data => {\n                    const standings = data['Premier League'].standings;\n                    const tableBody = document.getElementById('tableBody');\n\n                    for (const team in standings) {\n                        const row = document.createElement('tr');\n                        row.innerHTML = \\`\n                            <td>\\${standings[team].position}</td>\n                            <td>\\${team.replace(/-/g, ' ')}</td>\n                            <td><img src=\"\\${standings[team].team_crest}\" alt=\"\\${team}\"></td>\n                            <td>\\${standings[team].points}</td>\n                            <td>\\${standings[team].games_won}</td>\n                            <td>\\${standings[team].games_lost}</td>\n                            <td>\\${standings[team].goals_for}</td>\n                            <td>\\${standings[team].goals_against}</td>\n                            <td>\\${standings[team].goal_difference}</td>\n                        \\`;\n                        tableBody.appendChild(row);\n                    }\n                })\n                .catch(error => console.error('Error fetching data:', error));\n        </script>\n    </body>\n    </html>\n`);","map":{"version":3,"names":["document","write"],"sources":["/Users/ang3l/Documents/Software Engineering/cs373-idb/src/pages/league.js"],"sourcesContent":["// HTML structure generated dynamically\ndocument.write(`\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Premier League Standings</title>\n        <style>\n            table {\n                width: 100%;\n                border-collapse: collapse;\n            }\n            th, td {\n                border: 1px solid #ddd;\n                padding: 8px;\n                text-align: center;\n            }\n            th {\n                background-color: #f2f2f2;\n            }\n            img {\n                width: 50px;\n                height: auto;\n            }\n        </style>\n    </head>\n    <body>\n        <h1>Premier League Standings</h1>\n        <table id=\"standingsTable\">\n            <thead>\n                <tr>\n                    <th>Position</th>\n                    <th>Team</th>\n                    <th>Crest</th>\n                    <th>Points</th>\n                    <th>Games Won</th>\n                    <th>Games Lost</th>\n                    <th>Goals For</th>\n                    <th>Goals Against</th>\n                    <th>Goal Difference</th>\n                </tr>\n            </thead>\n            <tbody id=\"tableBody\">\n                <!-- Data will be inserted here -->\n            </tbody>\n        </table>\n\n        <script>\n            fetch('leagues.json')\n                .then(response => response.json())\n                .then(data => {\n                    const standings = data['Premier League'].standings;\n                    const tableBody = document.getElementById('tableBody');\n\n                    for (const team in standings) {\n                        const row = document.createElement('tr');\n                        row.innerHTML = \\`\n                            <td>\\${standings[team].position}</td>\n                            <td>\\${team.replace(/-/g, ' ')}</td>\n                            <td><img src=\"\\${standings[team].team_crest}\" alt=\"\\${team}\"></td>\n                            <td>\\${standings[team].points}</td>\n                            <td>\\${standings[team].games_won}</td>\n                            <td>\\${standings[team].games_lost}</td>\n                            <td>\\${standings[team].goals_for}</td>\n                            <td>\\${standings[team].goals_against}</td>\n                            <td>\\${standings[team].goal_difference}</td>\n                        \\`;\n                        tableBody.appendChild(row);\n                    }\n                })\n                .catch(error => console.error('Error fetching data:', error));\n        </script>\n    </body>\n    </html>\n`);\n"],"mappings":"AAAA;AACAA,QAAQ,CAACC,KAAK,CAAC;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}