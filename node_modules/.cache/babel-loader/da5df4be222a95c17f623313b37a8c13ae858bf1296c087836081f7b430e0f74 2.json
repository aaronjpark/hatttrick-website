{"ast":null,"code":"// Create an array of objects for sample data\nlet data = [{\n  id: 1,\n  name: 'John Doe',\n  age: 30,\n  city: 'New York'\n}, {\n  id: 2,\n  name: 'Jane Smith',\n  age: 25,\n  city: 'San Francisco'\n}, {\n  id: 3,\n  name: 'Mike Johnson',\n  age: 35,\n  city: 'Chicago'\n}];\n\n// Function to generate the table\nfunction generateTable(tableData) {\n  let table = document.createElement('table');\n  let thead = document.createElement('thead');\n  let tbody = document.createElement('tbody');\n\n  // Table header\n  let headers = Object.keys(tableData[0]);\n  let headerRow = document.createElement('tr');\n  headers.forEach(headerText => {\n    let th = document.createElement('th');\n    let textNode = document.createTextNode(headerText);\n    th.appendChild(textNode);\n    headerRow.appendChild(th);\n  });\n  thead.appendChild(headerRow);\n  table.appendChild(thead);\n\n  // Table body\n  tableData.forEach(rowData => {\n    let row = document.createElement('tr');\n    Object.values(rowData).forEach(value => {\n      let cell = document.createElement('td');\n      let textNode = document.createTextNode(value);\n      cell.appendChild(textNode);\n      row.appendChild(cell);\n    });\n    tbody.appendChild(row);\n  });\n  table.appendChild(tbody);\n  return table;\n}\n\n// Get a reference to the div where you want to add the table\nlet tableContainer = document.getElementById('table-container');\n\n// Generate the table and add it to the container\nlet generatedTable = generateTable(data);\ntableContainer.appendChild(generatedTable);","map":{"version":3,"names":["data","id","name","age","city","generateTable","tableData","table","document","createElement","thead","tbody","headers","Object","keys","headerRow","forEach","headerText","th","textNode","createTextNode","appendChild","rowData","row","values","value","cell","tableContainer","getElementById","generatedTable"],"sources":["/Users/ang3l/Documents/Software Engineering/cs373-idb/src/pages/league.js"],"sourcesContent":["// Create an array of objects for sample data\nlet data = [\n    { id: 1, name: 'John Doe', age: 30, city: 'New York' },\n    { id: 2, name: 'Jane Smith', age: 25, city: 'San Francisco' },\n    { id: 3, name: 'Mike Johnson', age: 35, city: 'Chicago' }\n  ];\n  \n  // Function to generate the table\n  function generateTable(tableData) {\n    let table = document.createElement('table');\n    let thead = document.createElement('thead');\n    let tbody = document.createElement('tbody');\n  \n    // Table header\n    let headers = Object.keys(tableData[0]);\n    let headerRow = document.createElement('tr');\n    headers.forEach(headerText => {\n      let th = document.createElement('th');\n      let textNode = document.createTextNode(headerText);\n      th.appendChild(textNode);\n      headerRow.appendChild(th);\n    });\n    thead.appendChild(headerRow);\n    table.appendChild(thead);\n  \n    // Table body\n    tableData.forEach(rowData => {\n      let row = document.createElement('tr');\n      Object.values(rowData).forEach(value => {\n        let cell = document.createElement('td');\n        let textNode = document.createTextNode(value);\n        cell.appendChild(textNode);\n        row.appendChild(cell);\n      });\n      tbody.appendChild(row);\n    });\n    table.appendChild(tbody);\n  \n    return table;\n  }\n  \n  // Get a reference to the div where you want to add the table\n  let tableContainer = document.getElementById('table-container');\n  \n  // Generate the table and add it to the container\n  let generatedTable = generateTable(data);\n  tableContainer.appendChild(generatedTable);\n  "],"mappings":"AAAA;AACA,IAAIA,IAAI,GAAG,CACP;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,UAAU;EAAEC,GAAG,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAW,CAAC,EACtD;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,GAAG,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAgB,CAAC,EAC7D;EAAEH,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,cAAc;EAAEC,GAAG,EAAE,EAAE;EAAEC,IAAI,EAAE;AAAU,CAAC,CAC1D;;AAED;AACA,SAASC,aAAaA,CAACC,SAAS,EAAE;EAChC,IAAIC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC3C,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EAC3C,IAAIE,KAAK,GAAGH,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIG,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACR,SAAS,CAAC,CAAC,CAAC,CAAC;EACvC,IAAIS,SAAS,GAAGP,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;EAC5CG,OAAO,CAACI,OAAO,CAACC,UAAU,IAAI;IAC5B,IAAIC,EAAE,GAAGV,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;IACrC,IAAIU,QAAQ,GAAGX,QAAQ,CAACY,cAAc,CAACH,UAAU,CAAC;IAClDC,EAAE,CAACG,WAAW,CAACF,QAAQ,CAAC;IACxBJ,SAAS,CAACM,WAAW,CAACH,EAAE,CAAC;EAC3B,CAAC,CAAC;EACFR,KAAK,CAACW,WAAW,CAACN,SAAS,CAAC;EAC5BR,KAAK,CAACc,WAAW,CAACX,KAAK,CAAC;;EAExB;EACAJ,SAAS,CAACU,OAAO,CAACM,OAAO,IAAI;IAC3B,IAAIC,GAAG,GAAGf,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;IACtCI,MAAM,CAACW,MAAM,CAACF,OAAO,CAAC,CAACN,OAAO,CAACS,KAAK,IAAI;MACtC,IAAIC,IAAI,GAAGlB,QAAQ,CAACC,aAAa,CAAC,IAAI,CAAC;MACvC,IAAIU,QAAQ,GAAGX,QAAQ,CAACY,cAAc,CAACK,KAAK,CAAC;MAC7CC,IAAI,CAACL,WAAW,CAACF,QAAQ,CAAC;MAC1BI,GAAG,CAACF,WAAW,CAACK,IAAI,CAAC;IACvB,CAAC,CAAC;IACFf,KAAK,CAACU,WAAW,CAACE,GAAG,CAAC;EACxB,CAAC,CAAC;EACFhB,KAAK,CAACc,WAAW,CAACV,KAAK,CAAC;EAExB,OAAOJ,KAAK;AACd;;AAEA;AACA,IAAIoB,cAAc,GAAGnB,QAAQ,CAACoB,cAAc,CAAC,iBAAiB,CAAC;;AAE/D;AACA,IAAIC,cAAc,GAAGxB,aAAa,CAACL,IAAI,CAAC;AACxC2B,cAAc,CAACN,WAAW,CAACQ,cAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}