pm.test("Response status code is 200", function () {
  pm.expect(pm.response.code).to.equal(200);
});


pm.test("Content type is application/json", function () {
    pm.expect(pm.response.headers.get("Content-Type")).to.include("application/json");
});


pm.test("Response has the required fields", function () {
    const responseData = pm.response.json();

    pm.expect(responseData).to.be.an('object');
    pm.expect(responseData).to.have.property('count');
    pm.expect(responseData).to.have.property('filters');
    pm.expect(responseData).to.have.property('competitions');
});


pm.test("Validate the competitions array", function () {
    const responseData = pm.response.json();
    
    pm.expect(responseData.competitions).to.exist.and.to.be.an('array');
    responseData.competitions.forEach(function(competition) {
        pm.expect(competition).to.be.an('object');
        pm.expect(competition.id).to.be.a('number');
        pm.expect(competition.area).to.exist.and.to.be.an('object');
        pm.expect(competition.name).to.be.a('string');
        pm.expect(competition.code).to.be.a('string');
        pm.expect(competition.type).to.be.a('string');
        pm.expect(competition.emblem).to.be.a('string');
        pm.expect(competition.plan).to.be.a('string');
        pm.expect(competition.currentSeason).to.exist.and.to.be.an('object');
        pm.expect(competition.currentSeason.id).to.be.a('number');
        pm.expect(competition.currentSeason.startDate).to.be.a('string');
        pm.expect(competition.currentSeason.endDate).to.be.a('string');
        pm.expect(competition.currentSeason.currentMatchday).to.be.a('number');
        pm.expect(competition.currentSeason.winner).to.be.null;
        pm.expect(competition.numberOfAvailableSeasons).to.be.a('number');
        pm.expect(competition.lastUpdated).to.be.a('string');
    });
});


pm.test("Current season's start date and end date are in a valid date format", function () {
  const responseData = pm.response.json();
  
  pm.expect(responseData.currentSeason.startDate).to.match(/^\d{4}-\d{2}-\d{2}$/);
  pm.expect(responseData.currentSeason.endDate).to.match(/^\d{4}-\d{2}-\d{2}$/);
});
